# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Client CI

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    
    - name: Cache node modules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        path: ~/.npm
        key: ${{ runner.os }}-build-v2-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - uses: actions/checkout@v2
    - name: Setup gfortran
      run: |
        sudo apt-get install gfortran-8
        mkdir -p gfortran-symlinks
        ln -s /usr/bin/gfortran-8 gfortran-symlinks/gfortran
        export PATH=$PWD/gfortran-symlinks:$PATH

    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Python Caching
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        # Makes the hashing depend on changes to requirements.txt and
        # run.sh in case there are some installations that happen there.
        key: ${{ hashFiles('server/requirements.txt') }}${{ hashFiles('server/run.sh') }}

    - name: Generate constants    
      run: sh generate_constants.sh

    - name: Run Tests
      run: |
        cd client
        npm ci
        npm run lint
        npm run test
