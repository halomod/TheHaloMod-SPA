# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

# This workflow will deploy the client to netlify on when a commit is added to dev or main branch.

name: Client Deployment

on: 
  push:
    branches:
      - main
      - dev
  pull_request:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout üõéÔ∏è
      uses: actions/checkout@v2
      with:
        persist-credentials: false

    - name: Cache node modules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        path: ~/.npm
        key: ${{ runner.os }}-build-v2-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: Python Caching
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        # Makes the hashing depend on changes to requirements.txt
        key: ${{ hashFiles('server/requirements.txt') }}

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    
    - name: Install dependencies
      run: cd client && npm install
    
    # Set up gfortran for camb
    - name: Setup gfortran
      run: |
        sudo apt-get install gfortran-8
        mkdir -p gfortran-symlinks
        ln -s /usr/bin/gfortran-8 gfortran-symlinks/gfortran
        export PATH=$PWD/gfortran-symlinks:$PATH

    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8.8

    - name: Generate constants    
      run: sh generate_client_files.sh

    - name: Build
      env: 
        VUE_APP_SERVER_URL: https://api.thehalomod.app
      run: cd client && npm run build

    - name: Deploy to Netlify
      uses: nwtgck/actions-netlify@v1.1
      with:
        publish-dir: './client/dist'
        # The "production-branch" means that any deploy to the specified branch
        # will deploy as the production site. For example at 
        # thehalomod.netlify.app
        production-branch: main
        github-token: ${{ secrets.GITHUB_TOKEN }}
        deploy-message: Deployed from GitHub Actions for branch "${{ github.ref }}"
        enable-commit-status: true
        # Disables commenting on individual commits with the deploy location
        # Instead, the deploy location can be found in the github action log
        # for this workflow and this step.
        enable-commit-comment: false
        # Enable having a comment on the PR that shows the link to the
        # deployment. This is overwritten on each consecutive deployment.
        enable-pull-request-comment: true
        github-deployment-environment: Netlify
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_OAUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      timeout-minutes: 1